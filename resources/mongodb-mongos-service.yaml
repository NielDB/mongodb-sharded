apiVersion: v1
kind: Service
metadata:
  name: mongos-router-service
  labels:
    name: mongos-router
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    role: mongos-router
  type: LoadBalancer
  loadBalancerIP: "34.76.113.128"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongos-router
spec:
  serviceName: mongos-router-service
  replicas: 2
  template:
    metadata:
      labels:
        role: mongos-router
        tier: routers
        replicaset: routers
        chaosmonkey: "chaosmonkey"
        kube-monkey/enabled: "enabled"
        kube-monkey/identifier: "mongos-router"
        kube-monkey/mtbf: '2'
        kube-monkey/kill-mode: "fixed"
        kube-monkey/kill-value: "1"

    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: replicaset
                  operator: In
                  values:
                  - routers
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      volumes:
      containers:
        - name: mongos-container
          image: mongo
          command:
            - "numactl"
            - "--interleave=all"
            - "mongos"
            - "--port"
            - "27017"
            - "--bind_ip"
            - "0.0.0.0"
            - "--configdb"
            - "ConfigDBRepSet/mongod-configdb-0.mongodb-configdb-service.default.svc.cluster.local:27017,mongod-configdb-1.mongodb-configdb-service.default.svc.cluster.local:27017,mongod-configdb-2.mongodb-configdb-service.default.svc.cluster.local:27017"
          resources:
            requests:
              cpu: 0.25
              memory: 512Mi
          ports:
            - containerPort: 27017
